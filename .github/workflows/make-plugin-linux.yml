name: Make Linux Plugin

on:
  workflow_dispatch:
    inputs:
      version_number:
        description: 'Version number'
        required: true
        default: '1.x.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1  
      with:
        install: true
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
      with:
        image: tonistiigi/binfmt:latest

    - name: Docker meta prereqs
      id: docker_meta_prereqs
      uses: docker/metadata-action@v3
      with:
        images: strophy/prereqs
        tags: |
          type=semver,pattern={{version}},value=${{ github.event.inputs.version_number }}
          type=raw,value=latest-dev
        flavor: |
          latest=false

    - name: Build and push Docker image
      id: docker_build_prereqs
      uses: docker/build-push-action@v2
      with:
        context: ${{ github.workspace }}
        file: ./net/grpc/gateway/docker/prereqs/Dockerfile
        push: false
        load: true
        tags: ${{ steps.docker_meta_prereqs.outputs.tags }}
        labels: ${{ steps.docker_meta_prereqs.outputs.labels }}
        platforms: linux/amd64,linux/arm64

    - name: Docker meta
      id: docker_meta_plugin
      uses: docker/metadata-action@v3
      with:
        images: strophy/protoc-plugin
        tags: |
          type=semver,pattern={{version}},value=${{ github.event.inputs.version_number }}
          type=raw,value=latest-dev
        flavor: |
          latest=false

    - name: Build and push Docker image
      id: docker_build_plugin
      uses: docker/build-push-action@v2
      with:
        context: ${{ github.workspace }}
        file: ./net/grpc/gateway/docker/protoc_plugin/Dockerfile
        push: false
        load: true
        tags: ${{ steps.docker_meta_plugin.outputs.tags }}
        labels: ${{ steps.docker_meta_plugin.outputs.labels }}
        platforms: linux/amd64,linux/arm64

    - name: Copy binary from Docker image
      run: |
        docker cp $(docker create strophy/protoc-plugin):/github/grpc-web/javascript/net/grpc/web/generator/protoc-gen-grpc-web \
          ./protoc-gen-grpc-web-${{ github.event.inputs.version_number }}-linux-x86_64
    - name: gen sha256
      run: |
        openssl dgst -sha256 -r -out protoc-gen-grpc-web-${{ github.event.inputs.version_number }}-linux-x86_64.sha256 \
          protoc-gen-grpc-web-${{ github.event.inputs.version_number }}-linux-x86_64
    - name: verify sha256
      run: sha256sum -c protoc-gen-grpc-web-${{ github.event.inputs.version_number }}-linux-x86_64.sha256
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: plugin
        path: protoc-gen-grpc-web*
